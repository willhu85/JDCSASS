@charset "UTF-8";
// =============================================================================
//   CSS3


// 各个浏览器属性开关，true开启， false关闭
// 默认会输出-webkit- 和 标准的属性
// =============================================================================
// $prefixForWebkit:       true !default;// 默认输出-webkit-
$prefixForMozilla:      true !default;
$prefixForMicrosoft:    true !default;
$prefixForOpera:        false !default;  //opera从版本15开始转向webkit，所以默认为false，不输出o前缀

// prefixer
// ==================================================================
// 用于在属性上加前缀
@mixin prefixer($property, $value) {
	// 默认输出-webkit
	-webkit-#{$property}: $value;
	@if $prefixForMozilla == true {
		-moz-#{$property}: $value;
	}
	@if $prefixForMicrosoft == true {
		-ms-#{$property}: $value;
	}
	@if $prefixForOpera == true {
		-o-#{$property}: $value;
	}
	// 默认输出不加前缀的
	#{$property}: $value;
}
// 用于在属性值上加前缀(很少用)
@mixin prefixer-value($property, $value) {
	// 默认输出-webkit
	#{$property}: -webkit-#{$value};
	@if $prefixForMozilla == true {
		#{$property}: -moz-#{$value};
	}
	@if $prefixForMicrosoft == true {
		#{$property}: -ms-#{$value};
	}
	@if $prefixForOpera == true {
		#{$property}: -o-#{$value};
	}
	// 默认输出不加前缀的
	#{$property}: $value;
}

// transition
//-----------------------------------------------------
@mixin transition($property...) {
  @if length($property) >= 1 {
    @include prefixer(transition, $property);
  }
  @else {
    $property: all 0.3s ease;
    @include prefixer(transition, $property);
  }
}

@mixin transition-property($property...) {
  // -webkit-transition-property: transitionPropertyNames($property);
  // @if $prefixForOpera {
  //   -o-transition-property: transitionPropertyNames($property);
  // }
  // transition-property: transitionPropertyNames($property);
  @include prefixer(transition-property, $property);
}

@mixin transition-duration($times...) {
  @include prefixer(transition-duration, $times);
}

@mixin transition-timing-function($motions...) {
  // timing-function
  // https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function
  @include prefixer(transition-timing-function, $motions);
}

@mixin transition-delay($times...) {
  @include prefixer(transition-delay, $times);
}

// Animation
// ==================================================================
// eg: animation(test 5s infinite)
@mixin animation($animation) {
	@include prefixer(animation,$animation);
}
// 要绑定到选择器的 keyframe 名称
@mixin animation-name($name) {
	@include prefixer(animation-name,$name);
}
// 完成动画所花费的时间
@mixin animation-duration($duration) {
	@include prefixer(animation-duration,$duration);
}
// 动画的速度曲线
@mixin animation-timing-function($timing-function) {
	@include prefixer(animation-timing-function,$timing-function);
}
// 动画开始前的延迟
@mixin animation-delay($delay) {
	@include prefixer(animation-delay,$delay);
}
// 动画播放的次数
@mixin animation-iteration-count($iteration-count) {
	@include prefixer(animation-iteration-count,$iteration-count);
}
// 是否反向播放动画
@mixin animation-direction($direction) {
	@include prefixer(animation-direction,$direction);
}
// 结束时动画停留的位置
@mixin animation-fill-mode($fill-mode) {
	@include prefixer(animation-fill-mode,$fill-mode);
}

// backface-visibility
// 用于3D效果时是否显示背面
@mixin backface-visibility($visiblity: hidden) {
	@include prefixer(backface-visibility,$visiblity);
}

// ==================================================================
// box-shadow
// 这个妖孽的...是用于填写多参数的东东
@mixin box-shadow($shadow...) {
	@include prefixer(box-shadow,$shadow);
}
// box-sizing
@mixin box-sizing($box-model) {
	@include prefixer(box-sizing,$box-model);
}

// placehoder text 样式
@mixin placeholder($color) {
  &::-moz-placeholder {
      color: $color;
      opacity: 1;   // see https://github.com/twbs/bootstrap/pull/11526
  }
  &:-ms-input-placeholder {
    color: $color;  // IE10+
  }
  &::-webkit-input-placeholder {
    color: $color;
  }
}

// transformations
// ==================================================================
// scale 缩放
@mixin scale($ratio...) {
	@include prefixer(transform, scale($ratio));
}
@mixin scale3D($ratio...) {
	@include prefixer(transform, scale3D($ratio));
}
@mixin scaleX($ratio) {
	@include prefixer(transform, scaleX($ratio));
}
@mixin scaleY($ratio) {
	@include prefixer(transform, scaleY($ratio));
}
@mixin scaleZ($ratio) {
	@include prefixer(transform, scaleZ($ratio));
}
// skew 斜切
// 关于为什么 用 skewX,skewY。是因为IE不支持skew(x,y)写法
// see https://github.com/twbs/bootstrap/issues/4885; IE9+
@mixin skew($degrees...) {
	@include prefixer(transform, skew($degrees));
 	//skew会有一些锯齿,解决办法是backface-visibility:hidden;
  	// see https://github.com/twitter/bootstrap/issues/5319
  	@include backface-visibility;
}
@mixin skewX($degrees) {
	@include prefixer(transform, skewX($degrees));
	@include backface-visibility;
}
@mixin skewY($degrees) {
	@include prefixer(transform, skewY($degrees));
	@include backface-visibility;
}
// translate 位移
@mixin translate($px...) {
	@include prefixer(transform, translate($px));
}
@mixin translate3D($px...) {
	@include prefixer(transform, translate3D($px));
}
@mixin translateX($px) {
	@include prefixer(transform, translateX($px));
}
@mixin translateY($px) {
	@include prefixer(transform, translateY($px));
}
@mixin translateZ($px) {
	@include prefixer(transform, translateZ($px));
}
// rotate 旋转
@mixin rotate($degrees...) {
	@include prefixer(transform, rotate($degrees));
}
@mixin rotate3D($degrees...) {
	@include prefixer(transform, rotate3D($degrees));
}
@mixin rotateX($degrees) {
	@include prefixer(transform, rotateX($degrees));
}
@mixin rotateY($degrees) {
	@include prefixer(transform, rotateY($degrees));
}
@mixin rotateZ($degrees) {
	@include prefixer(transform, rotateZ($degrees) );
}

// 动画
// ==================================================================
@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	@if $prefixForMicrosoft == true {
		@-ms-keyframes #{$name} {
			@content;
		}
	}
	@if $prefixForMozilla == true {
		@-moz-keyframes #{$name} {
			@content;
		}
	}
	@if $prefixForOpera == true {
		@-o-keyframes #{$name} {
			@content;
		}
	}
	@keyframes #{$name} {
		@content;
	}
}

// font-face
// ==================================================================
// http://www.css3files.com/font/
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
	@font-face {
		font-family: $font-family;
		font-weight: $weight;
		font-style: $style;
		src: url('#{$file-path}.eot');								     // eot字体，支持IE9之前版本,如果不需要可以删掉
		src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),// 也是支持IE9之前的,需要要支持IE6-9,则需要吧上面的也加上
			 url('#{$file-path}.svg##{$font-family}') format('svg'),     // 用于支持iPad iOS 4.2之前的版本
			 url('#{$file-path}.woff') format('woff'),				 	 // woff字体，支持所有现代浏览器
			 url('#{$file-path}.ttf') format('truetype');			 	 // ttf字体，支持移动端的safari&opera
	}
}
// background-image
// ==================================================================
// border-box | padding-box | content-box
@mixin background-clip($clip) {
	@include prefixer(background-clip, $clip);
}
@mixin background-origin($origin) {
	@include prefixer(background-origin, $origin);
}
@mixin background-size($size...) {
	// <length> | auto | cover | contain
	@if length($size...) >= 1 {
		@include prefixer(background-size, $size);
	} @else {
		@include prefixer(background-size, cover);
	}
}

// Gradients 渐变
// ==================================================================
// 左->右 水平渐变
// eg: @include gradient-horizontal(#000, #FFF)
//     @include gradient-horizontal(#000 80%, #FFF 90%, #000);
@mixin gradient-horizontal($gradient...) {
	background-image: -webkit-linear-gradient(left, $gradient); // Safari 5.1+, Chrome 10+
	@if $prefixForOpera == true {
		background-image: -o-linear-gradient(left, $gradient); // Opera 11.10
	}
	background-image: linear-gradient(to right, $gradient); // Standard, IE10
}
// 左->右 水平渐变 平铺
// eg: @include gradient-horizontal-repeating(#333 5%, #ccc 10%);
@mixin gradient-horizontal-repeating($gradient...){
	background-image: -webkit-repeating-linear-gradient(left, $gradient); // Safari 5.1+, Chrome 10+
	@if $prefixForOpera == true {
		background-image: -o-repeating-linear-gradient(left, $gradient); // Opera 11.10
	}
	background-image: repeating-linear-gradient(to right, $gradient); // Standard, IE10
}
// 上->下 垂直渐变
@mixin gradient-vertical($gradient...) {
	background-image: -webkit-linear-gradient(top, $gradient); // Safari 5.1+, Chrome 10+
	@if $prefixForOpera == true {
		background-image: -o-linear-gradient(top, $gradient); // Opera 11.10
	}
	background-image: linear-gradient(to bottom, $gradient); // Standard, IE10
}
// 上->下 垂直渐变 平铺
@mixin gradient-vertical-repeating($gradient...){
	background-image: -webkit-repeating-linear-gradient(top, $gradient); // Safari 5.1+, Chrome 10+
	@if $prefixForOpera == true {
		background-image: -o-repeating-linear-gradient(top, $gradient); // Opera 11.10
	}
	background-image: repeating-linear-gradient(to bottom, $gradient); // Standard, IE10
}
// 角度渐变
// @include gradient-angle(45deg, #333 30%, #ccc);
@mixin gradient-angle($gradient...) {
	background-image: -webkit-linear-gradient($gradient); // Safari 5.1+, Chrome 10+
	@if $prefixForOpera == true {
		background-image: -o-linear-gradient($gradient); // Opera 11.10
	}
	background-image: linear-gradient($gradient); // Standard, IE1
}
// 角度渐变 平铺
// @include gradient-angle-repeating(45deg, #333 30%, #ccc);
@mixin gradient-angle-repeating($gradient...) {
	background-image: -webkit-repeating-linear-gradient($gradient); // Safari 5.1+, Chrome 10+
	@if $prefixForOpera == true {
		background-image: -o-repeating-linear-gradient($gradient); // Opera 11.10
	}
	background-image: repeating-linear-gradient($gradient); // Standard, IE1
}
// 简单径向渐变
// @include gradient-radial(#00F,#FFF);
// 复杂的径向渐变后续添加
@mixin gradient-radial($gradient...){
	background-image: -webkit-radial-gradient($gradient); // Safari 5.1+, Chrome 10+
	@if $prefixForOpera == true {
		background-image: -o-radial-gradient($gradient); // Opera 11.10
	}
	background-image: radial-gradient($gradient); // Standard, IE1
	background-repeat: no-repeat;
}